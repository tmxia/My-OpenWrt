name: N1-LEDE

on:
  workflow_dispatch:
  #schedule:
    #- cron: 0 20 * * 4
  push:
    branches:
      - master

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  SCRIPT_SH: n1-lede/script.sh
  CONFIG_SH: n1-lede/config.sh
  SRC_SH: n1-lede/src.sh
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai
  
jobs:
  build_openwrt:
    name: Build OpenWrt and release
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
      pull-requests: write

    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: true

        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true

    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-mark hold grub-efi-amd64-signed
        sudo -E apt update -y --fix-missing
        sudo -E apt full-upgrade -y
        sudo -E apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool llvm lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "$TZ"
        df -h

    - name: Clone source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "tag_name=$(date +%y.%m.%d.%H%M)" >> $GITHUB_ENV

    - name: Load custom feeds
      run: |
        [ -e files ] && mv files openwrt/files
        chmod +x $SCRIPT_SH
        ./$SCRIPT_SH
                      
    - name: Update feeds
      run: |
        chmod +x $SRC_SH
        ./$SRC_SH
        cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        chmod +x $CONFIG_SH
        ./$CONFIG_SH

    - name: Download package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      run: |
        chmod -R 755 openwrt
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "compile_status=success" >> $GITHUB_ENV

    - name: Package armsr as openwrt
      if: ${{ env.compile_status }} == 'success' && !cancelled()
      uses: unifreq/openwrt_packit@master
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        KERNEL_REPO_URL: breakingbadboy/OpenWrt
        KERNEL_VERSION_NAME: 6.12.y
        PACKAGE_SOC: diy
        GZIP_IMGS: .xz
        SCRIPT_DIY_PATH: n1/mk_s905d_n1.sh
        WHOAMI: tmxia
        SW_FLOWOFFLOAD: 0
        SFE_FLOW: 0

    - name: Upload firmware to release
      uses: softprops/action-gh-release@master
      if: ${{ env.PACKAGED_STATUS == 'success' }} && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: OpenWrt_lede_${{ env.PACKAGED_OUTPUTDATE }}
        files: ${{ env.PACKAGED_OUTPUTPATH }}/*.img.xz
        body: |
          首次使用建议全新刷写
          * 基本信息
          IP: 192.168.3.3
          账户: root
          密码: password

    - name: Delete old releases
      uses: dev-drprasad/delete-older-releases@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        keep_latest: 2
        delete_tags : true
