name: N1-OpenWrt

on:
  workflow_dispatch:
  #schedule:
    #- cron: 0 20 * * 4
  push:
    branches:
      - master

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  SCRIPT_SH: n1-lede/script.sh
  CONFIG_SH: n1-lede/config.sh
  SRC_SH: n1-lede/src.sh
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai
  
jobs:
  build_openwrt:
    name: Build OpenWrt and release
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
      pull-requests: write

    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: true

        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true

    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-mark hold grub-efi-amd64-signed
        sudo -E apt update -y --fix-missing
        sudo -E apt full-upgrade -y
        # 安装额外可能需要的依赖
        sudo -E apt install -y libxml2-dev libxslt1-dev libcurl4-openssl-dev libjson-c-dev
        sudo -E apt install -y --no-install-recommends build-essential fakeroot dpkg-dev
        sudo -E apt install -y -qq python3-distutils python3-setuptools python3-pip
        sudo -E apt install -y -qq python3-wheel python3-dev python3-ply python3-yaml
        sudo -E apt install -y -qq gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
        sudo -E apt install -y -qq kmod mtd-utils u-boot-tools
        sudo -E apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool llvm lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "$TZ"
        df -h
        # 清理更多临时文件
        sudo rm -rf /tmp/*
        sudo rm -rf /var/tmp/*

    - name: Clone source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "tag_name=$(date +%y.%m.%d.%H%M)" >> $GITHUB_ENV

    - name: Load custom feeds
      run: |
        [ -e files ] && mv files openwrt/files
        chmod +x $SCRIPT_SH
        # 在脚本执行前添加错误检查
        if [ -f $SCRIPT_SH ]; then
          ./$SCRIPT_SH
        else
          echo "Error: $SCRIPT_SH not found. Please check the path."
          exit 1
        fi
                      
    - name: Update feeds
      run: |
        chmod +x $SRC_SH
        # 在脚本执行前添加错误检查
        if [ -f $SRC_SH ]; then
          ./$SRC_SH
        else
          echo "Error: $SRC_SH not found. Please check the path."
          exit 1
        fi
        cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        chmod +x $CONFIG_SH
        # 在脚本执行前添加错误检查
        if [ -f $CONFIG_SH ]; then
          ./$CONFIG_SH
        else
          echo "Error: $CONFIG_SH not found. Please check the path."
          exit 1
        fi

    - name: Download package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      run: |
        cd openwrt
        # 调整编译线程数为总线程数的一半，避免因线程过多导致资源不足
        THREADS=$(( $(nproc) / 2 ))
        echo -e "$THREADS thread compile"
        make -j$THREADS || make -j1 V=s
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin

    - name: Package Armvirt as OpenWrt
      uses: ophub/flippy-openwrt-actions@main
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        PACKAGE_SOC: s905d
        KERNEL_REPO_URL: ophub/kernel
        KERNEL_VERSION_NAME: 6.12.y
        KERNEL_AUTO_LATEST: true
        WHOAMI: ${{ github.actor }}

    - name: Create release
      uses: ncipollo/release-action@v1
      if: env.PACKAGED_STATUS == 'success'
      with:
        tag: OpenWrt_s905d_${{ env.tag_name }}
        name: N1-OpenWrt | ${{ env.DATE }}
        allowUpdates: true
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        body: |
          N1 OpenWrt 精简版本
                                    
            * 默认IP：192.168.3.3
            默认用户名：root
            默认密码：password
            安装到EMMC及在线更新：系统-->晶晨宝盒
            
    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.3.4
      if: env.PACKAGED_STATUS == 'success'
      with:
        keep_latest: 10
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Delete older workflow runs and artifacts
      uses: Mattraks/delete-workflow-runs@main
      if: env.PACKAGED_STATUS == 'success'
      with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 14
          keep_minimum_runs: 2
