name: N1 Optimized

on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: "0 0 1,16 * *"

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  CONFIG_FILE: n1/.config
  DEPENDENCIES_FILE: n1/dependencies.txt
  DIY_SH: n1/diy.sh
  FILES: n1/files
  TZ: Asia/Shanghai
  CCACHE_DIR: ${{ github.workspace }}/ccache
  CCACHE_MAXSIZE: 5G

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 180

    steps:
    - name: Show system info
      run: |
        echo "🖥️ Server Arch: $(arch)"
        echo "💾 Disk Space: $(df -h | grep '/dev/root' | awk '{print $4}') Free"
        echo "🧠 Memory: $(free -h | awk '/Mem/{print $2}') Total"

    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 2048
        temp-reserve-mb: 1024
        root-reserve-mb: 6144
        remove-dotnet: true
        remove-android: true
        remove-haskell: true

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          openwrt/dl
          ${{ env.CCACHE_DIR }}
        key: ${{ runner.os }}-${{ hashFiles(env.DEPENDENCIES_FILE) }}-${{ hashFiles(env.CONFIG_FILE) }}-${{ hashFiles('**/diy.sh') }}
        restore-keys: |
          ${{ runner.os }}-${{ hashFiles(env.DEPENDENCIES_FILE) }}-

    - name: Setup environment
      run: |
        sudo timedatectl set-timezone "$TZ"
        sudo apt-get update -yq
        sudo apt-get install -yq $(cat $DEPENDENCIES_FILE) ccache
        sudo apt-get autoremove --purge -yq
        ccache --show-stats

    - name: Clone source
      run: |
        git clone $REPO_URL -b $REPO_BRANCH --depth=1 --single-branch openwrt
        [ -d $FILES ] && cp -rf $FILES openwrt/files/
        [ -f $CONFIG_FILE ] && cp $CONFIG_FILE openwrt/.config

    - name: Prepare build
      working-directory: ./openwrt
      run: |
        chmod +x ../$DIY_SH
        ../$DIY_SH
        ./scripts/feeds update -a
        ./scripts/feeds install -a --force-overwrite
        make defconfig

    - name: Download packages
      working-directory: ./openwrt
      run: |
        make download -j$(($(nproc) * 2))
        find dl -size -1024c -delete

    - name: Compile firmware
      working-directory: ./openwrt
      run: |
        set -exo pipefail
        ccache --zero-stats
        make -j$(($(nproc) - 1)) || make -j1 V=sc
        ccache --show-stats
        echo "compile_status=success" >> $GITHUB_ENV

    - name: SSH connect
      if: (github.event.inputs.ssh == 'true') || contains(github.event.action, 'ssh')
      uses: P3TERX/ssh2actions@v2.0.0

    - name: Package image
      if: ${{ env.compile_status == 'success' && !cancelled() }}
      uses: unifreq/openwrt_packit@v1.1.0
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        PACKAGE_SOC: diy
        SCRIPT_DIY_PATH: n1/mk_s905d_n1.sh
        GZIP_IMGS: .xz

    - name: Upload release
      if: ${{ env.PACKAGED_STATUS == 'success' && !cancelled() }}
      uses: softprops/action-gh-release@v2.0.3
      with:
        tag_name: Build_$(date +%Y%m%d%H%M)
        files: ${{ env.PACKAGED_OUTPUTPATH }}/*.img.xz
        body: |
          ### Build Info
          - Date: $(date +'%Y-%m-%d %H:%M:%S %Z')
          - Branch: ${{ github.ref }}
          - Commit: ${{ github.sha }}

    - name: Cleanup
      if: always()
      run: |
        sudo rm -rf openwrt/{tmp,build_dir,staging_dir,logs}
        ccache --clear-stats